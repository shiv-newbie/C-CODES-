// This code is written by Shivam Haldiya github repository: https://github.com/shiv-newbie/Cpp-CODES/blob/main/ProblemJ-Longest%20Word
//Problem J Longest Word
//Time Limit: 2 seconds
//A word is composed of only letters of the alphabet (a-z, A-Z) and may contain one hyphen (-) or more. Given a text containing words, and other characters (punctuations, numbers, symbols, etc), you are to write a program to find the longest word.
//Each letter or a hyphen in a word is counted as 1. For example,
//Input
//The length of Apple
//The length of son-in-law The length of ACM-ICPC
//is 5 is 10 is 8
//A text may contain several lines and paragraphs but the text does not exceed 10,000 characters. No word can exceed 100 characters. The word E-N-D indicates the end of input.
//Output
//Print out the longest word in small letters. If there exist several longest words, print only the first one found in the text.
//Sample Input
//ACM International Collegiate Programming Contest (abbreviated as ACM-ICPC or just ICPC) is an annual multi-tiered computer programming competition among the universities of the world. The contest is sponsored by IBM. Headquartered at Baylor University, with autonomous regions on six continents, the ICPC is directed by Baylor Professor William B. Poucher, Executive Director, and operates under the auspices of the Association for Computing Machinery (ACM).
//The 2012 ACM-ICPC Asia Hatyai Regional Programming Contest is held during 15-16 November 2012. It is hosted by Prince of Songkla University, Hatyai campus. E-N-D
//Sample Output
//international

#include <iostream>
#include <vector>
#include <map>
using namespace std;

int wordLen(string word)
{
    
    int count = 0;
    for(int i = 0; i < word.length(); i++)
    {
        if(word[i] <= 'z' && word[i] >= 'a')
            count++;
        else if(word[i] <= 'Z' && word[i] >= 'A')
            count++;
        else if(word[i] == '-')
            count++;
        else
        {
            if(i == word.length()-1)
                return count;
            else if(i == 0)
                continue;
            return 0;
        }
            
    }
    return count;
}

int main()
{
    
    int max = 0;
    string max_word;
    string word;
    cin >> word;
    while(word != "E-N-D")
    {
        int length = wordLen(word);
        if(length > max)
        {
            max = length;
            max_word = word;
        }
        cin >> word;
    }
    
    
    for(int i = 0; i < max_word.length(); i++)
    {
        if(max_word[i] <= 'Z' && max_word[i] >= 'A')
            cout << char(int(max_word[i]) + 32);
        else if(max_word[i] >= 'a' && max_word[i] <= 'z')
            cout << max_word[i];
        else if(max_word[i] == '-')
            cout << max_word[i];
    }
    cout << endl;
}
